package com.TestDEVPro.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.apache.log4j.*;



import com.TestDEVPro.domain.core.Ibmdata;

import com.TestDEVPro.dao.mysql.Ibmdata_Default_ActivityDao;

import com.TestDEVPro.domain.core.TeUser;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("Ibmdata_Default_ActivityService")
public class Ibmdata_Default_ActivityService extends TeBaseService  {
private static Logger log = Logger.getLogger(Ibmdata_Default_ActivityService.class.getName());

	private Ibmdata_Default_ActivityDao ibmdata_Default_Activity_dao;


	public Ibmdata_Default_ActivityDao get_ibmdata_Default_Activity_dao() {
		return ibmdata_Default_Activity_dao;
	}


	@Resource(name="Ibmdata_Default_ActivityDao")
	public void set_ibmdata_Default_Activity_dao(Ibmdata_Default_ActivityDao ibmdata_Default_Activity_dao) {
		this.ibmdata_Default_Activity_dao = ibmdata_Default_Activity_dao;
	}



	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform save operation of  Ibmdata noun into database
	*@param Ibmdata
	*@param user
	*@return the_Ibmdata object will return
	*@throws Exception
	*/

	public Ibmdata create_ibmdata(Ibmdata Ibmdata, TeUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("create_ibmdata service operation started !");

		try{
			Ibmdata the_Ibmdata;

			the_Ibmdata = ibmdata_Default_Activity_dao.create_ibmdata(Ibmdata, user);

 			log.info(" Object returned from create_ibmdata  service method !");
			return the_Ibmdata;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("create_ibmdata service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform update operation of  Ibmdata noun into database
	*@param Ibmdata
	*@param user
	*@return the_Ibmdata object will return
	*@throws Exception
	*/

	public Ibmdata update_ibmdata(Ibmdata Ibmdata, TeUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("update_ibmdata service operation started !");

		try{
			Ibmdata the_Ibmdata;

			the_Ibmdata = ibmdata_Default_Activity_dao.update_ibmdata(Ibmdata, user);

 			log.info(" Object returned from update_ibmdata  service method !");
			return the_Ibmdata;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("update_ibmdata service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform fetch operation of  Ibmdata noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Ibmdata object will return
	*@throws Exception
	*/

	public Ibmdata ibmdata_search_for_update(long id, TeUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("ibmdata_search_for_update service operation started !");

		try{
			Ibmdata the_Ibmdata;

			the_Ibmdata = ibmdata_Default_Activity_dao.ibmdata_search_for_update(id, user);

 			log.info(" Object returned from ibmdata_search_for_update  service method !");
			return the_Ibmdata;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("ibmdata_search_for_update service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to perform delete operation of  Ibmdata noun from  database based on given noun id
	*@param  id
	*@param user
	*@return the_Ibmdata id deleted based on id
	*@throws Exception
	*/

	public String  delete_ibmdata(long id, TeUser user) throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info("delete_ibmdata service operation started !");

		try{
			String method_return_message;

			method_return_message = ibmdata_Default_Activity_dao.delete_ibmdata(id, user);

 			log.info(" Object returned from delete_ibmdata  service method !");
			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error("delete_ibmdata service throws exception : "+ e.toString());

		}
		return null;



	}

	//auths not ready at this time

	/**
	*
	*The purpose of this service method is to get list of  Ibmdata noun from  database
	*
	*
	*@return List of Ibmdata object will return
	*@throws Exception
	*/

	public ArrayList<Ibmdata> get_all_ibmdata() throws Exception {

 		  log.setLevel(Level.INFO);
	      log.info(" service operation started !");

		try{
			ArrayList<Ibmdata> Ibmdata_list;

			Ibmdata_list = ibmdata_Default_Activity_dao.get_all_ibmdata();

 			log.info(" Object returned from   service method !");
			return Ibmdata_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());
			log.error(" service throws exception : "+ e.toString());

		}
		return null;



	}




}